package homework20a;
/*
Упражнение 1: Тестирование Метода Определения Четности Числа
Задание: • Создайте класс NumberUtils с методом boolean isEven(int number), который возвращает true, если число чётное.
• Напишите тесты для проверки метода isEven с разными числами (чётными и нечётными).
Цель: • Практика написания тестов с булевыми результатами.
• Использование assertTrue и assertFalse.

Упражнение 2: Тестирование Класса Счётчик
Задание: • Реализуйте класс Counter с методами increment(), decrement() и int getValue().
• Напишите тесты, которые проверяют корректность увеличения и уменьшения значения счётчика.
Цель: • Практика тестирования изменения состояния объекта.
• Использование методов @BeforeEach для настройки перед каждым тестом.

Упражнение 3: Тестирование Метода Реверса Строки
Задание: • Создайте класс StringUtils с методом String reverse(String input),
 который возвращает строку в обратном порядке.
• Напишите тесты для метода reverse, проверяя работу с различными строками.
Цель: • Практика тестирования методов, выполняющих преобразования.
• Проверка работы с пустыми строками и одиночными символами.

Упражнение 4: Тестирование Метода Нахождения Максимального Числа в Массиве
Задание: • Создайте класс ArrayUtils с методом int findMax(int[] numbers),
который возвращает наибольшее число в массиве.
• Напишите тесты для метода findMax, проверяя работу с различными массивами.
Цель: • Практика тестирования методов, работающих с массивами.
• Проверка работы с пустыми массивами и массивами из одного элемента.
 */

public class Utils {
    private int counterValue;

    //  метода определения четности числа
    public static boolean isEven(int number) {
        return number % 2 == 0;
    }

    // метод класса счётчик
    public void increment() { // увеличение счетчика
        counterValue++;
    }

    public void decrement() { // уменьшение счетчика
        counterValue--;
    }

    public int getValue() {
        return counterValue;
    }

    //  метод реверса строки
    public static String reverse(String input) {
        return new StringBuilder(input).reverse().toString();
    }

   // метод нахождения максимального числа в массиве
    public static int findMax(int[] numbers) {
        if (numbers.length == 0) return Integer.MIN_VALUE; // массив не должен быть пустым, берем минимально возможное
        int max = numbers[0];
        for (int number : numbers) {
            if (number > max) {
                max = number;
            }
        }
        return max;
    }

} // klass ended
