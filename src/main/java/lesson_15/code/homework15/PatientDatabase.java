package homework15;
/*   –ó–∞–¥–∞–Ω–∏–µ: –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å–Ω–∏—Ü—ã, –Ω–∞–ø–∏—à–∏—Ç–µ
 –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏ —É—Å–ª—É–≥ –≤ –±–æ–ª—å–Ω–∏—Ü–µ.
–í –ø—Ä–æ–≥—Ä–∞–º–º–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:
1.	–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞: –ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –∏–º–µ–Ω–µ–º –∏ —Ñ–∞–º–∏–ª–∏–µ–π –≤ —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.
2.	–£–¥–∞–ª–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞: –£–¥–∞–ª–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏.
3.	–ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–∞: –ù–∞–π–¥–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏.
4.	–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–∞: –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞.
5.	–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.
6.	–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: –í—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.
7.	–û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ –∑–∞–ø–∏—Å–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞.
8.	–í—ã—Ö–æ–¥: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã.
*/

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.Scanner;

public class PatientDatabase {
/* " --- üè• –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å–Ω–∏—Ü—ã üè• --- "
1. –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞
2. –£–¥–∞–ª–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞
3. –ù–∞–π—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
4. –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
5. –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
6. –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
7. –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
8. –í—ã–π—Ç–∏
–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
*/
static Scanner scanner = new Scanner(System.in);

    static ArrayList<String> patient = new ArrayList<>();

    public static void main(String[] args) {

        boolean runnning = true;

        while (runnning) {
           new  PatientDatabase();
            int choice = scanner.nextInt();
            switch (choice) {
                case 1 -> addPatient();
                case 2 -> removePatient();
                case 3 -> searchPatient();
                case 4 -> updatePatient();
                case 5 -> sortPatient();
                case 6 -> showPatient();
                case 7 -> clearPatient();
                case 8 -> {
                    System.out.println("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
                    scanner.close();
                    runnning = false;
                }
                default -> System.err.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            }
        }
    }

    private static void showMenu() {
        System.out.println("\n--- –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å–Ω–∏—Ü—ã ---");
        System.out.println("1. –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞");
        System.out.println("2. –£–¥–∞–ª–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞");
        System.out.println("3. –ù–∞–π—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞");
        System.out.println("4. –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞");
        System.out.println("5. –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤");
        System.out.println("6. –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤");
        System.out.println("7. –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤");
        System.out.println("8. –í—ã–π—Ç–∏");
        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ");
    }
    private static void addPatient() {
        scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–∞—Ü–∏–µ–Ω—Ç–∞: ");
        String patientName = scanner.nextLine();
        patient.add(patientName);
        System.out.println("–ò–º—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ.");
    }

    private static void removePatient() {
        scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ");
        String patientNameToRemove = scanner.nextLine().trim();
        if (patient.contains(patientNameToRemove)) {
            Iterator<String> iterator = patient.iterator();
            while (iterator.hasNext()) {
                String patient = iterator.next();
                if (patient.equals(patientNameToRemove)) {
                    iterator.remove(); // –£–¥–∞–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ // Remove using the iterator
                }
            }
            System.out.println("–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ —É–¥–∞–ª–µ–Ω—ã.");
        } else {
            System.out.println("–ü–∞—Ü–∏–µ–Ω—Ç " + patientNameToRemove + " –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }

    }

    private static void searchPatient() {
        scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞: ");
        String patientToSearch = scanner.nextLine().trim();
        if (patient.contains(patientToSearch)) {
            System.out.println("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω: " + patientToSearch);
        } else {
            System.out.println("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        }
    }

    private static void updatePatient() {
        scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ");
        String patientNameToUpdate = scanner.nextLine().trim();
        if (!patient.contains(patientNameToUpdate)) {
            System.out.println("–ü–∞—Ü–∏–µ–Ω—Ç " + patientNameToUpdate + " –Ω–µ –Ω–∞–π–¥–µ–Ω");
        } else {
            System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é: ");
            String newProductName = scanner.nextLine().trim();
            int index = patient.indexOf(patientNameToUpdate);
            patient.set(index, newProductName);
            System.out.println("–î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ - –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã.");
        }
    }

    private static void sortPatient() {
        Collections.sort(patient);
        System.out.println("–°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω.");
    }

    private static void showPatient() {
        if (patient.isEmpty()) {
            System.out.println("–°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç.");
        } else {
            System.out.println("–°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ:");
            for (int i = 0; i < patient.size(); i++) {
                System.out.println((i + 1) + ". " + patient.get(i));
            }
        }
    }

    private static void clearPatient() {
        patient.clear();
        System.out.println("–°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –æ—á–∏—â–µ–Ω.");
    }
    /*
1.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫.
2.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ —É–¥–∞–ª–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞.
3.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–∞–π—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ø–∞—Ü–∏–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
4.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é.
5.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
6.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.
7.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫.
8.	–í—ã—Ö–æ–¥ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã.
     */
} // klass ended
