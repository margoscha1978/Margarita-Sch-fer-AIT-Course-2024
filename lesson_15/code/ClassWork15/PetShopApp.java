package ClassWork15;
// 1. –ú–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –º–µ–Ω—é —Å –≤–æ–∑–º–æ–∂–Ω—ã–º
//2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫, —É–∫–∞–∑–∞–≤
//3. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—é.
//4. –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞: –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é.
//5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.
//6. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.
//7. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤: –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤.
//8. –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞: –û—á–∏—â–∞–µ—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤.
//9. –í—ã—Ö–æ–¥: –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É.

    //1.  –ú–µ–Ω—é: –ú–µ—Ç–æ–¥ showMenu() –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –º–µ–Ω—é —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏. –ü–æ–ª
    //2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: –ú–µ—Ç–æ–¥ addProduct() –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫.
    //3. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: –ú–µ—Ç–æ–¥ removeProduct() —É–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é.
    //4. –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞: –ú–µ—Ç–æ–¥ searchProduct() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ.
    //5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: –ú–µ—Ç–æ–¥ updateProduct() –∏–∑–º–µ–Ω—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
    //6. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: –ú–µ—Ç–æ–¥ sortProducts() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.
    //7. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: –ú–µ—Ç–æ–¥ showProducts() –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ —Ç–æ–≤–∞—Ä–∞
    //8. –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: –ú–µ—Ç–æ–¥ clearProducts() –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–∞
    //9. –í—ã—Ö–æ–¥: –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ 8.

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.Scanner;

public class PetShopApp {
    static Scanner scanner = new Scanner(System.in);

    static ArrayList<String> products = new ArrayList<>();

    public static void main(String[] args) {

        boolean runnning = true;

        while (runnning) {
            showMenu();
            int choice = scanner.nextInt();
            switch (choice) {
                case 1 -> addProduct();
                case 2 -> removeProduct();
                case 3 -> searchProduct();
                case 4 -> updateProduct();
                case 5 -> sortProducts();
                case 6 -> showProducts();
                case 7 -> clearProducts();
                case 8 -> {
                    System.out.println("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
                    scanner.close();
                    runnning = false;
                }
                default -> System.err.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            }
        }
    }

    private static void showMenu() {
        System.out.println("\n--- üòª  –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–æ–æ–º–∞–≥–∞–∑–∏–Ω–æ–º üòº ---");
        System.out.println("1. –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä");
        System.out.println("2. –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä");
        System.out.println("3. –ù–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä");
        System.out.println("4. –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä");
        System.out.println("5. –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã");
        System.out.println("6. –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤");
        System.out.println("7. –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤");
        System.out.println("8. –í—ã–π—Ç–∏");
        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ");
    }

    private static void addProduct() {
        scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ");
        String productName = scanner.nextLine();
        products.add(productName);
        System.out.println("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω.");
    }

    private static void removeProduct() {
        scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ");
        String productNameToRemove = scanner.nextLine().trim();
        if (products.contains(productNameToRemove)) {
            Iterator<String> iterator = products.iterator();
            while (iterator.hasNext()) {
                String product = iterator.next();
                if (product.equals(productNameToRemove)) {
                    iterator.remove(); // –£–¥–∞–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ // Remove using the iterator
                }
            }
            System.out.println("–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω.");
        } else {
            System.out.println("–¢–æ–≤–∞—Ä " + productNameToRemove + " –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }

    }

    private static void searchProduct() {
        scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞: ");
        String productToSearch = scanner.nextLine().trim();
        if (products.contains(productToSearch)) {
            System.out.println("–¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω: " + productToSearch);
        } else {
            System.out.println("T–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        }
    }

    private static void updateProduct() {
        scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ");
        String productNameToUpdate = scanner.nextLine().trim();
        if (!products.contains(productNameToUpdate)) {
            System.out.println("–¢–æ–≤–∞—Ä " + productNameToUpdate + " –Ω–µ –Ω–∞–π–¥–µ–Ω");
        } else {
            System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ");
            String newProductName = scanner.nextLine().trim();
            int index = products.indexOf(productNameToUpdate);
            products.set(index, newProductName);
            System.out.println("–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω.");
        }
    }

    private static void sortProducts() {
        Collections.sort(products);
        System.out.println("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω.");
    }

    private static void showProducts() {
        if (products.isEmpty()) {
            System.out.println("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç.");
        } else {
            System.out.println("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:");
            for (int i = 0; i < products.size(); i++) {
                System.out.println((i + 1) + ". " + products.get(i));
            }
        }
    }

    private static void clearProducts() {
        products.clear();
        System.out.println("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –æ—á–∏—â–µ–Ω.");
    }

} // klass ended